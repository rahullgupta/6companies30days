class Solution {
public:
    int minOperations(vector<int>& nums, vector<int>& numsDivide) {
        int num = numsDivide[0];
        for(int i = 1; i < numsDivide.size(); i++)
            num = __gcd(num, numsDivide[i]);
        priority_queue<int, vector<int>, greater<int>> pq(nums.begin(), nums.end());
        int count = 0;
        while(pq.size() != 0){
            if(pq.top() > num)
                return -1;
            else if(num % pq.top() == 0)
                break;
            else{
                pq.pop();
                count++;
            }
        }
        if(count == numsDivide.size())
            return -1;
        else
            return count;
    }
};
