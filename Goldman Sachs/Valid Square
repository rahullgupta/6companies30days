class Solution {
public:
    bool validSquare(vector<int>& p1, vector<int>& p2, vector<int>& p3, vector<int>& p4) {
        unordered_map<double, int> m;
        int x1 = p1[0], y1 = p1[1];
        int x2 = p2[0], y2 = p2[1];
        int x3 = p3[0], y3 = p3[1];
        int x4 = p4[0], y4 = p4[1];
        double d1 = sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));
        double d2 = sqrt((x1 - x3) * (x1 - x3) + (y1 - y3) * (y1 - y3));
        double d3 = sqrt((x1 - x4) * (x1 - x4) + (y1 - y4) * (y1 - y4));
        double d4 = sqrt((x2 - x3) * (x2 - x3) + (y2 - y3) * (y2 - y3));
        double d5 = sqrt((x2 - x4) * (x2 - x4) + (y2 - y4) * (y2 - y4));
        double d6 = sqrt((x3 - x4) * (x3 - x4) + (y3 - y4) * (y3 - y4));
        m[d1]++;
        m[d2]++;
        m[d3]++;
        m[d4]++;
        m[d5]++;
        m[d6]++;
        return (m.count(0) == 0 && m.size() == 2);
    }
};
